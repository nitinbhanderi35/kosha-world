YPES=t.FLOWBASEANNOTATION_TYPES=t.EXPRESSION_TYPES=t.EXPRESSIONWRAPPER_TYPES=t.EXPORTDECLARATION_TYPES=t.ENUMMEMBER_TYPES=t.ENUMBODY_TYPES=t.DECLARATION_TYPES=t.CONDITIONAL_TYPES=t.COMPLETIONSTATEMENT_TYPES=t.CLASS_TYPES=t.BLOCK_TYPES=t.BLOCKPARENT_TYPES=t.BINARY_TYPES=t.ACCESSOR_TYPES=void 0;var n=r(7940);const s=n.FLIPPED_ALIAS_KEYS["Standardized"];t.STANDARDIZED_TYPES=s;const i=n.FLIPPED_ALIAS_KEYS["Expression"];t.EXPRESSION_TYPES=i;const a=n.FLIPPED_ALIAS_KEYS["Binary"];t.BINARY_TYPES=a;const o=n.FLIPPED_ALIAS_KEYS["Scopable"];t.SCOPABLE_TYPES=o;const l=n.FLIPPED_ALIAS_KEYS["BlockParent"];t.BLOCKPARENT_TYPES=l;const c=n.FLIPPED_ALIAS_KEYS["Block"];t.BLOCK_TYPES=c;const u=n.FLIPPED_ALIAS_KEYS["Statement"];t.STATEMENT_TYPES=u;const p=n.FLIPPED_ALIAS_KEYS["Terminatorless"];t.TERMINATORLESS_TYPES=p;const f=n.FLIPPED_ALIAS_KEYS["CompletionStatement"];t.COMPLETIONSTATEMENT_TYPES=f;const d=n.FLIPPED_ALIAS_KEYS["Conditional"];t.CONDITIONAL_TYPES=d;const h=n.FLIPPED_ALIAS_KEYS["Loop"];t.LOOP_TYPES=h;const m=n.FLIPPED_ALIAS_KEYS["While"];t.WHILE_TYPES=m;const y=n.FLIPPED_ALIAS_KEYS["ExpressionWrapper"];t.EXPRESSIONWRAPPER_TYPES=y;const g=n.FLIPPED_ALIAS_KEYS["For"];t.FOR_TYPES=g;const b=n.FLIPPED_ALIAS_KEYS["ForXStatement"];t.FORXSTATEMENT_TYPES=b;const T=n.FLIPPED_ALIAS_KEYS["Function"];t.FUNCTION_TYPES=T;const S=n.FLIPPED_ALIAS_KEYS["FunctionParent"];t.FUNCTIONPARENT_TYPES=S;const E=n.FLIPPED_ALIAS_KEYS["Pureish"];t.PUREISH_TYPES=E;const x=n.FLIPPED_ALIAS_KEYS["Declaration"];t.DECLARATION_TYPES=x;const v=n.FLIPPED_ALIAS_KEYS["PatternLike"];t.PATTERNLIKE_TYPES=v;const P=n.FLIPPED_ALIAS_KEYS["LVal"];t.LVAL_TYPES=P;const A=n.FLIPPED_ALIAS_KEYS["TSEntityName"];t.TSENTITYNAME_TYPES=A;const w=n.FLIPPED_ALIAS_KEYS["Literal"];t.LITERAL_TYPES=w;const C=n.FLIPPED_ALIAS_KEYS["Immutable"];t.IMMUTABLE_TYPES=C;const I=n.FLIPPED_ALIAS_KEYS["UserWhitespacable"];t.USERWHITESPACABLE_TYPES=I;const O=n.FLIPPED_ALIAS_KEYS["Method"];t.METHOD_TYPES=O;const k=n.FLIPPED_ALIAS_KEYS["ObjectMember"];t.OBJECTMEMBER_TYPES=k;const N=n.FLIPPED_ALIAS_KEYS["Property"];t.PROPERTY_TYPES=N;const _=n.FLIPPED_ALIAS_KEYS["UnaryLike"];t.UNARYLIKE_TYPES=_;const D=n.FLIPPED_ALIAS_KEYS["Pattern"];t.PATTERN_TYPES=D;const M=n.FLIPPED_ALIAS_KEYS["Class"];t.CLASS_TYPES=M;const L=n.FLIPPED_ALIAS_KEYS["ImportOrExportDeclaration"];t.IMPORTOREXPORTDECLARATION_TYPES=L;const j=n.FLIPPED_ALIAS_KEYS["ExportDeclaration"];t.EXPORTDECLARATION_TYPES=j;const F=n.FLIPPED_ALIAS_KEYS["ModuleSpecifier"];t.MODULESPECIFIER_TYPES=F;const B=n.FLIPPED_ALIAS_KEYS["Accessor"];t.ACCESSOR_TYPES=B;const R=n.FLIPPED_ALIAS_KEYS["Private"];t.PRIVATE_TYPES=R;const U=n.FLIPPED_ALIAS_KEYS["Flow"];t.FLOW_TYPES=U;const V=n.FLIPPED_ALIAS_KEYS["FlowType"];t.FLOWTYPE_TYPES=V;const K=n.FLIPPED_ALIAS_KEYS["FlowBaseAnnotation"];t.FLOWBASEANNOTATION_TYPES=K;const W=n.FLIPPED_ALIAS_KEYS["FlowDeclaration"];t.FLOWDECLARATION_TYPES=W;const $=n.FLIPPED_ALIAS_KEYS["FlowPredicate"];t.FLOWPREDICATE_TYPES=$;const q=n.FLIPPED_ALIAS_KEYS["EnumBody"];t.ENUMBODY_TYPES=q;const H=n.FLIPPED_ALIAS_KEYS["EnumMember"];t.ENUMMEMBER_TYPES=H;const J=n.FLIPPED_ALIAS_KEYS["JSX"];t.JSX_TYPES=J;const G=n.FLIPPED_ALIAS_KEYS["Miscellaneous"];t.MISCELLANEOUS_TYPES=G;const X=n.FLIPPED_ALIAS_KEYS["TypeScript"];t.TYPESCRIPT_TYPES=X;const z=n.FLIPPED_ALIAS_KEYS["TSTypeElement"];t.TSTYPEELEMENT_TYPES=z;const Y=n.FLIPPED_ALIAS_KEYS["TSType"];t.TSTYPE_TYPES=Y;const Q=n.FLIPPED_ALIAS_KEYS["TSBaseType"];t.TSBASETYPE_TYPES=Q;const Z=L;t.MODULEDECLARATION_TYPES=Z},4152:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.UPDATE_OPERATORS=t.UNARY_OPERATORS=t.STRING_UNARY_OPERATORS=t.STATEMENT_OR_BLOCK_KEYS=t.NUMBER_UNARY_OPERATORS=t.NUMBER_BINARY_OPERATORS=t.NOT_LOCAL_BINDING=t.LOGICAL_OPERATORS=t.INHERIT_KEYS=t.FOR_INIT_KEYS=t.FLATTENABLE_KEYS=t.EQUALITY_BINARY_OPERATORS=t.COMPARISON_BINARY_OPERATORS=t.COMMENT_KEYS=t.BOOLEAN_UNARY_OPERATORS=t.BOOLEAN_NUMBER_BINARY_OPERATORS=t.BOOLEAN_BINARY_OPERATORS=t.BLOCK_SCOPED_SYMBOL=t.BINARY_OPERATORS=t.ASSIGNMENT_OPERATORS=void 0;const r=["consequent","body","alternate"];t.STATEMENT_OR_BLOCK_KEYS=r;const n=["body","expressions"];t.FLATTENABLE_KEYS=n;const s=["left","init"];t.FOR_INIT_KEYS=s;const i=["leadingComments","trailingComments","innerComments"];t.COMMENT_KEYS=i;const a=["||","&&","??"];t.LOGICAL_OPERATORS=a;const o=["++","--"];t.UPDATE_OPERATORS=o;const l=[">","<",">=","<="];t.BOOLEAN_NUMBER_BINARY_OPERATORS=l;const c=["==","===","!=","!=="];t.EQUALITY_BINARY_OPERATORS=c;const u=[...c,"in","instanceof"];t.COMPARISON_BINARY_OPERATORS=u;const p=[...u,...l];t.BOOLEAN_BINARY_OPERATORS=p;const f=["-","/","%","*","**","&","|",">>",">>>","<<","^"];t.NUMBER_BINARY_OPERATORS=f;const d=["+",...f,...p,"|>"];t.BINARY_OPERATORS=d;const h=["=","+=",...f.map((e=>e+"=")),...a.map((e=>e+"="))];t.ASSIGNMENT_OPERATORS=h;const m=["delete","!"];t.BOOLEAN_UNARY_OPERATORS=m;const y=["+","-","~"];t.NUMBER_UNARY_OPERATORS=y;const g=["typeof"];t.STRING_UNARY_OPERATORS=g;const b=["void","throw",...m,...y,...g];t.UNARY_OPERATORS=b;const T={optional:["typeAnnotation","typeParameters","returnType"],force:["start","loc","end"]};t.INHERIT_KEYS=T;const S=Symbol.for("var used to be block scoped");t.BLOCK_SCOPED_SYMBOL=S;const E=Symbol.for("should not be considered a local binding");t.NOT_LOCAL_BINDING=E},1846:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=ensureBlock;var n=r(3763);function ensureBlock(e,t="body"){const r=(0,n.default)(e[t],e);e[t]=r;return r}},2855:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=gatherSequenceExpressions;var n=r(6332);var s=r(601);var i=r(7453);var a=r(7290);function gatherSequenceExpressions(e,t,r){const o=[];let l=true;for(const c of e){if(!(0,s.isEmptyStatement)(c)){l=false}if((0,s.isExpression)(c)){o.push(c)}else if((0,s.isExpressionStatement)(c)){o.push(c.expression)}else if((0,s.isVariableDeclaration)(c)){if(c.kind!=="var")return;for(const e of c.declarations){const t=(0,n.default)(e);for(const e of Object.keys(t)){r.push({kind:c.kind,id:(0,a.default)(t[e])})}if(e.init){o.push((0,i.assignmentExpression)("=",e.id,e.init))}}l=true}else if((0,s.isIfStatement)(c)){const e=c.consequent?gatherSequenceExpressions([c.consequent],t,r):t.buildUndefinedNode();const n=c.alternate?gatherSequenceExpressions([c.alternate],t,r):t.buildUndefinedNode();if(!e||!n)return;o.push((0,i.conditionalExpression)(c.test,e,n))}else if((0,s.isBlockStatement)(c)){const e=gatherSequenceExpressions(c.body,t,r);if(!e)return;o.push(e)}else if((0,s.isEmptyStatement)(c)){if(e.indexOf(c)===0){l=true}}else{return}}if(l){o.push(t.buildUndefinedNode())}if(o.length===1){return o[0]}else{return(0,i.sequenceExpression)(o)}}},1642:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=toBindingIdentifierName;var n=r(5842);function toBindingIdentifierName(e){e=(0,n.default)(e);if(e==="eval"||e==="arguments")e="_"+e;return e}},3763:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=toBlock;var n=r(601);var s=r(7453);function toBlock(e,t){if((0,n.isBlockStatement)(e)){return e}let r=[];if((0,n.isEmptyStatement)(e)){r=[]}else{if(!(0,n.isStatement)(e)){if((0,n.isFunction)(t)){e=(0,s.returnStatement)(e)}else{e=(0,s.expressionStatement)(e)}}r=[e]}return(0,s.blockStatement)(r)}},8564:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=toComputedKey;var n=r(601);var s=r(7453);function toComputedKey(e,t=e.key||e.property){if(!e.computed&&(0,n.isIdentifier)(t))t=(0,s.stringLiteral)(t.name);return t}},4409:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var n=r(601);var s=toExpression;t["default"]=s;function toExpression(e){if((0,n.isExpressionStatement)(e)){e=e.expression}if((0,n.isExpression)(e)){return e}if((0,n.isClass)(e)){e.type="ClassExpression"}else if((0,n.isFunction)(e)){e.type="FunctionExpression"}if(!(0,n.isExpression)(e)){throw new Error(`cannot turn ${e.type} to an expression`)}return e}},5842:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=toIdentifier;var n=r(6488);var s=r(4975);function toIdentifier(e){e=e+"";let t="";for(const r of e){t+=(0,s.isIdentifierChar)(r.codePointAt(0))?r:"-"}t=t.replace(/^[-0-9]+/,"");t=t.replace(/[-\s]+(.)?/g,(function(e,t){return t?t.toUpperCase():""}));if(!(0,n.default)(t)){t=`_${t}`}return t||"_"}},8136:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=toKeyAlias;var n=r(601);var s=r(7290);var i=r(2510);function toKeyAlias(e,t=e.key){let r;if(e.kind==="method"){return toKeyAlias.increment()+""}else if((0,n.isIdentifier)(t)){r=t.name}else if((0,n.isStringLiteral)(t)){r=JSON.stringify(t.value)}else{r=JSON.stringify((0,i.default)((0,s.default)(t)))}if(e.computed){r=`[${r}]`}if(e.static){r=`static:${r}`}return r}toKeyAlias.uid=0;toKeyAlias.increment=function(){if(toKeyAlias.uid>=Number.MAX_SAFE_INTEGER){return toKeyAlias.uid=0}else{return toKeyAlias.uid++}}},3541:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=toSequenceExpression;var n=r(2855);function toSequenceExpression(e,t){if(!(e!=null&&e.length))return;const r=[];const s=(0,n.default)(e,t,r);if(!s)return;for(const e of r){t.push(e)}return s}},5678:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var n=r(601);var s=r(7453);var i=toStatement;t["default"]=i;function toStatement(e,t){if((0,n.isStatement)(e)){return e}let r=false;let i;if((0,n.isClass)(e)){r=true;i="ClassDeclaration"}else if((0,n.isFunction)(e)){r=true;i="FunctionDeclaration"}else if((0,n.isAssignmentExpression)(e)){return(0,s.expressionStatement)(e)}if(r&&!e.id){i=false}if(!i){if(t){return false}else{throw new Error(`cannot turn ${e.type} to a statement`)}}e.type=i;return e}},2576:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var n=r(6488);var s=r(7453);var i=valueToNode;t["default"]=i;const a=Function.call.bind(Object.prototype.toString);function isRegExp(e){return a(e)==="[object RegExp]"}function isPlainObject(e){if(typeof e!=="object"||e===null||Object.prototype.toString.call(e)!=="[object Object]"){return false}const t=Object.getPrototypeOf(e);return t===null||Object.getPrototypeOf(t)===null}function valueToNode(e){if(e===undefined){return(0,s.identifier)("undefined")}if(e===true||e===false){return(0,s.booleanLiteral)(e)}if(e===null){return(0,s.nullLiteral)()}if(typeof e==="string"){return(0,s.stringLiteral)(e)}if(typeof e==="number"){let t;if(Number.isFinite(e)){t=(0,s.numericLiteral)(Math.abs(e))}else{let r;if(Number.isNaN(e)){r=(0,s.numericLiteral)(0)}else{r=(0,s.numericLiteral)(1)}t=(0,s.binaryExpression)("/",r,(0,s.numericLiteral)(0))}if(e<0||Object.is(e,-0)){t=(0,s.unaryExpression)("-",t)}return t}if(isRegExp(e)){const t=e.source;const r=e.toString().match(/\/([a-z]+|)$/)[1];return(0,s.regExpLiteral)(t,r)}if(Array.isArray(e)){return(0,s.arrayExpression)(e.map(valueToNode))}if(isPlainObject(e)){const t=[];for(const r of Object.keys(e)){let i;if((0,n.default)(r)){i=(0,s.identifier)(r)}else{i=(0,s.stringLiteral)(r)}t.push((0,s.objectProperty)(i,valueToNode(e[r])))}return(0,s.objectExpression)(t)}throw new Error("don't know how to turn this value into a node")}},8013:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.patternLikeCommon=t.functionTypeAnnotationCommon=t.functionDeclarationCommon=t.functionCommon=t.classMethodOrPropertyCommon=t.classMethodOrDeclareMethodCommon=void 0;var n=r(9247);var s=r(6488);var i=r(4975);var a=r(6476);var o=r(4152);var l=r(3706);const c=(0,l.defineAliasedType)("Standardized");c("ArrayExpression",{fields:{elements:{validate:(0,l.chain)((0,l.assertValueType)("array"),(0,l.assertEach)((0,l.assertNodeOrValueType)("null","Expression","SpreadElement"))),default:!process.env.BABEL_TYPES_8_BREAKING?[]:undefined}},visitor:["elements"],aliases:["Expression"]});c("AssignmentExpression",{fields:{operator:{validate:function(){if(!process.env.BABEL_TYPES_8_BREAKING){return(0,l.assertValueType)("string")}const e=(0,l.assertOneOf)(...o.ASSIGNMENT_OPERATORS);const t=(0,l.assertOneOf)("=");return function(r,s,i){const a=(0,n.default)("Pattern",r.left)?t:e;a(r,s,i)}}()},left:{validate:!process.env.BABEL_TYPES_8_BREAKING?(0,l.assertNodeType)("LVal"):(0,l.assertNodeType)("Identifier","MemberExpression","ArrayPattern","ObjectPattern","TSAsExpression","TSSatisfiesExpression","TSTypeAssertion","TSNonNullExpression")},right:{validate:(0,l.assertNodeType)("Expression")}},builder:["operator","left","right"],visitor:["left","right"],aliases:["Expression"]});c("BinaryExpression",{builder:["operator","left","right"],fields:{operator:{validate:(0,l.assertOneOf)(...o.BINARY_OPERATORS)},left:{validate:function(){const e=(0,l.assertNodeType)("Expression");const t=(0,l.assertNodeType)("Expression","PrivateName");const r=Object.assign((function(r,n,s){const i=r.operator==="in"?t:e;i(r,n,s)}),{oneOfNodeTypes:["Expression","PrivateName"]});return r}()},right:{validate:(0,l.assertNodeType)("Expression")}},visitor:["left","right"],aliases:["Binary","Expression"]});c("InterpreterDirective",{builder:["value"],fields:{value:{validate:(0,l.assertValueType)("string")}}});c("Directive",{visitor:["value"],fields:{value:{validate:(0,l.assertNodeType)("DirectiveLiteral")}}});c("DirectiveLiteral",{builder:["value"],fields:{value:{validate:(0,l.assertValueType)("string")}}});c("BlockStatement",{builder:["body","directives"],visitor:["directives","body"],fields:{directives:{validate:(0,l.chain)((0,l.assertValueType)("array"),(0,l.assertEach)((0,l.assertNodeType)("Directive"))),default:[]},body:{validate:(0,l.chain)((0,l.assertValueType)("array"),(0,l.assertEach)((0,l.assertNodeType)("Statement")))}},aliases:["Scopable","BlockParent","Block","Statement"]});c("BreakStatement",{visitor:["label"],fields:{label:{validate:(0,l.assertNodeType)("Identifier"),optional:true}},aliases:["Statement","Terminatorless","CompletionStatement"]});c("CallExpression",{visitor:["callee","arguments","typeParameters","typeArguments"],builder:["callee","arguments"],aliases:["Expression"],fields:Object.assign({callee:{validate:(0,l.assertNodeType)("Expression","Super","V8IntrinsicIdentifier")},arguments:{validate:(0,l.chain)((0,l.assertValueType)("array"),(0,l.assertEach)((0,l.assertNodeType)("Expression","SpreadElement","JSXNamespacedName","ArgumentPlaceholder")))}},!process.env.BABEL_TYPES_8_BREAKING?{optional:{validate:(0,l.assertOneOf)(true,false),optional:true}}:{},{typeArguments:{validate:(0,l.assertNodeType)("TypeParameterInstantiation"),optional:true},typeParameters:{validate:(0,l.assertNodeType)("TSTypeParameterInstantiation"),optional:true}})});c("CatchClause",{visitor:["param","body"],fields:{param:{validate:(0,l.assertNodeType)("Identifier","ArrayPattern","ObjectPattern"),optional:true},body:{validate:(0,l.assertNodeType)("BlockStatement")}},aliases:["Scopable","BlockParent"]});c("ConditionalExpression",{visitor:["test","consequent","alternate"],fields:{test:{validate:(0,l.assertNodeType)("Expression")},consequent:{validate:(0,l.assertNodeType)("Expression")},alternate:{validate:(0,l.assertNodeType)("Expression")}},aliases:["Expression","Conditional"]});c("ContinueStatement",{visitor:["label"],fields:{label:{validate:(0,l.assertNodeType)("Identifier"),optional:true}},aliases:["Statement","Terminatorless","CompletionStatement"]});c("DebuggerStatement",{aliases:["Statement"]});c("DoWhileStatement",{visitor:["test","body"],fields:{test:{validate:(0,l.assertNodeType)("Expression")},body:{validate:(0,l.assertNodeType)("Statement")}},aliases:["Statement","BlockParent","Loop","While","Scopable"]});c("EmptyStatement",{aliases:["Statement"]});c("ExpressionStatement",{vis