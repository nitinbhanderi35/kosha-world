import React, { useEffect, useRef, useState } from "react";
import dynamic from "next/dynamic";
import { useDebounce } from "use-debounce";
import { NavButton } from "@/components/button/NavButton";
import {
  FaArrowLeft,
  FaChevronLeft,
  FaChevronRight,
  FaHome,
} from "react-icons/fa";
import { convertToHindi } from "@/utils/function";
import axiosInstance from "@/utils/axiosInstance";
import LottieAnimation from "@/components/LottieAnimation";

const CustomEditor = dynamic(() => import("../../components/custom-editor"), {
  ssr: false,
});

const DhatuId = ({ dhatu_id }) => {
  const [currentDhatupath, setCurrentDhatupath] = useState();
  const [dhatupath, setDhatupath] = useState();
  const [content, setContent] = useState("");
  const [status, setStatus] = useState("Saved!");
  const [saveContent] = useDebounce(content, 500);
  const [focus, setFocus] = useState(false);

  const getCurrentDhatu = async () => {
    try {
      const response = await axiosInstance.get("/dhatu");
      setDhatupath(response.data.data);
      return;
    } catch (error) {
      console.error("Error geting data:", error);
    }
  };

  const getCurrentVartikpath = async (id) => {
    try {
      const response = await axiosInstance.get("/dhatu", {
        params: {
          i: id,
        },
      });
      setCurrentDhatupath(response.data.data);
      setContent(response.data.data.data);
      return;
    } catch (error) {
      console.error("Error geting data:", error);
    }
  };

  useEffect(() => {
    getCurrentDhatu();
    getCurrentVartikpath(dhatu_id);
  }, [dhatu_id]);

  const handleSave = async (content) => {
    try {
      await axiosInstance.post("/dhatu", {
        id: currentDhatupath?._id,
        data: content,
      });
      setStatus("Saved!");
    } catch (error) {
      console.error("Error inserting data:", error);
    }
  };

  useEffect(() => {
    if (focus) {
      handleSave(content);
    }
  }, [saveContent]);

  const handleOnBlur = () => {
    handleSave(content);
    setFocus(false);
  };

  const handlePage = (page) => {
    const currentObject =
      dhatupath && dhatupath?.find((obj) => obj.i == dhatu_id);
    const currentIndexInArray = dhatupath?.indexOf(currentObject);
    if (page == "NEXT") {
      const nextObject = dhatupath?.[currentIndexInArray + 1];
      return `${nextObject ? nextObject.i : dhatu_id}`;
    }
    if (page == "PREVIOUS") {
      const nextObject = dhatupath?.[currentIndexInArray - 1];
      return `${nextObject ? nextObject.i : dhatu_id}`;
    }
  };

  console.log("currentDhatupath--------", currentDhatupath);

  return (
    <div>
      <div className="flex justify-between gap-2 items-center z-30 sticky top-0 bg-secondary p-2 -m-4 mb-1">
        <div className="grow-0 gap-2 items-center">
          <div className="flex gap-2 items-center">
            <NavButton
              type="link"
              link="/dashboard"
              label="back-btn"
              className="flex"
            >
              <FaHome />
            </NavButton>
            <NavButton
              type="link"
              link="/dhatu"
              label="back-btn"
              className="flex"
            >
              <FaArrowLeft />
            </NavButton>
          </div>
        </div>
        <div className="grow text-primary text-xs 2xs:text-xs xs:text-base md:text-lg lg:text-xl">
          {currentDhatupath?.word && (
            <div className="flex justify-center items-center gap-10">
              <NavButton
                type="link"
                link={`${handlePage("PREVIOUS")}`}
                label="back-btn"
                className="flex"
              >
                <FaChevronLeft className="w-5 h-5 md:w-7 md:h-7" />
              </NavButton>
              <div className="flex justify-center">
                {convertToHindi(
                  `${currentDhatupath?.chapter}.${currentDhatupath?.dhatu}`
                )}{" "}
                - {currentDhatupath?.word}{" "} 
                <span className="text-gray-400 font-normal">
                  {currentDhatupath?.aupadeshik} {currentDhatupath?.artha}
                </span>
              </div>
              <NavButton
                type="link"
                link={`${handlePage("NEXT")}`}
                label="back-btn"
                className="flex"
    