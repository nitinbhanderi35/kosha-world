bjects must have a [Symbol.iterator]() method.");
	}
	function _unsupportedIterableToArray$2(o, minLen) {
	  if (!o) return;
	  if (typeof o === "string") return _arrayLikeToArray$2(o, minLen);
	  var n = Object.prototype.toString.call(o).slice(8, -1);
	  if (n === "Object" && o.constructor) n = o.constructor.name;
	  if (n === "Map" || n === "Set") return Array.from(o);
	  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$2(o, minLen);
	}
	function _arrayLikeToArray$2(arr, len) {
	  if (len == null || len > arr.length) len = arr.length;
	  for (var i = 0, arr2 = new Array(len); i < len; i++) {
	    arr2[i] = arr[i];
	  }
	  return arr2;
	}
	function _iterableToArrayLimit$2(arr, i) {
	  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
	  if (_i == null) return;
	  var _arr = [];
	  var _n = true;
	  var _d = false;
	  var _s, _e;
	  try {
	    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
	      _arr.push(_s.value);
	      if (i && _arr.length === i) break;
	    }
	  } catch (err) {
	    _d = true;
	    _e = err;
	  } finally {
	    try {
	      if (!_n && _i["return"] != null) _i["return"]();
	    } finally {
	      if (_d) throw _e;
	    }
	  }
	  return _arr;
	}
	function _arrayWithHoles$2(arr) {
	  if (Array.isArray(arr)) return arr;
	}
	var roles$1 = [].concat(_ariaAbstractRoles.default, _ariaLiteralRoles.default, _ariaDpubRoles.default, _ariaGraphicsRoles.default);
	roles$1.forEach(function (_ref) {
	  var _ref2 = _slicedToArray$2(_ref, 2),
	    roleDefinition = _ref2[1];
	  // Conglomerate the properties
	  var _iterator = _createForOfIteratorHelper$2(roleDefinition.superClass),
	    _step;
	  try {
	    for (_iterator.s(); !(_step = _iterator.n()).done;) {
	      var superClassIter = _step.value;
	      var _iterator2 = _createForOfIteratorHelper$2(superClassIter),
	        _step2;
	      try {
	        var _loop = function _loop() {
	          var superClassName = _step2.value;
	          var superClassRoleTuple = roles$1.find(function (_ref3) {
	            var _ref4 = _slicedToArray$2(_ref3, 1),
	              name = _ref4[0];
	            return name === superClassName;
	          });
	          if (superClassRoleTuple) {
	            var superClassDefinition = superClassRoleTuple[1];
	            for (var _i2 = 0, _Object$keys = Object.keys(superClassDefinition.props); _i2 < _Object$keys.length; _i2++) {
	              var prop = _Object$keys[_i2];
	              if (
	              // $FlowIssue Accessing the hasOwnProperty on the Object prototype is fine.
	              !Object.prototype.hasOwnProperty.call(roleDefinition.props, prop)) {
	                Object.assign(roleDefinition.props, _defineProperty({}, prop, superClassDefinition.props[prop]));
	              }
	            }
	          }
	        };
	        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
	          _loop();
	        }
	      } catch (err) {
	        _iterator2.e(err);
	      } finally {
	        _iterator2.f();
	      }
	    }
	  } catch (err) {
	    _iterator.e(err);
	  } finally {
	    _iterator.f();
	  }
	});
	var rolesMap = {
	  entries: function entries() {
	    return roles$1;
	  },
	  forEach: function forEach(fn) {
	    var thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
	    var _iterator3 = _createForOfIteratorHelper$2(roles$1),
	      _step3;
	    try {
	      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
	        var _step3$value = _slicedToArray$2(_step3.value, 2),
	          key = _step3$value[0],
	          values = _step3$value[1];
	        fn.call(thisArg, values, key, roles$1);
	      }
	    } catch (err) {
	      _iterator3.e(err);
	    } finally {
	      _iterator3.f();
	    }
	  },
	  get: function get(key) {
	    var item = roles$1.find(function (tuple) {
	      return tuple[0] === key ? true : false;
	    });
	    return item && item[1];
	  },
	  has: function has(key) {
	    return !!rolesMap.get(key);
	  },
	  keys: function keys() {
	    return roles$1.map(function (_ref5) {
	      var _ref6 = _slicedToArray$2(_ref5, 1),
	        key = _ref6[0];
	      return key;
	    });
	  },
	  values: function values() {
	    return roles$1.map(function (_ref7) {
	      var _ref8 = _slicedToArray$2(_ref7, 2),
	        values = _ref8[1];
	      return values;
	    });
	  }
	};
	var _default$2 = (0, _iterationDecorator$2.default)(rolesMap, rolesMap.entries());
	rolesMap$1.default = _default$2;

	var elementRoleMap$1 = {};

	var toStr$a = Object.prototype.toString;
	var isArguments$3 = function isArguments(value) {
	  var str = toStr$a.call(value);
	  var isArgs = str === '[object Arguments]';
	  if (!isArgs) {
	    isArgs = str !== '[object Array]' && value !== null && typeof value === 'object' && typeof value.length === 'number' && value.length >= 0 && toStr$a.call(value.callee) === '[object Function]';
	  }
	  return isArgs;
	};

	var keysShim$1;
	if (!Object.keys) {
	  // modified from https://github.com/es-shims/es5-shim
	  var has$3 = Object.prototype.hasOwnProperty;
	  var toStr$9 = Object.prototype.toString;
	  var isArgs$1 = isArguments$3; // eslint-disable-line global-require
	  var isEnumerable$1 = Object.prototype.propertyIsEnumerable;
	  var hasDontEnumBug = !isEnumerable$1.call({
	    toString: null
	  }, 'toString');
	  var hasProtoEnumBug = isEnumerable$1.call(function () {}, 'prototype');
	  var dontEnums = ['toString', 'toLocaleString', 'valueOf', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'constructor'];
	  var equalsConstructorPrototype = function (o) {
	    var ctor = o.constructor;
	    return ctor && ctor.prototype === o;
	  };
	  var excludedKeys = {
	    $applicationCache: true,
	    $console: true,
	    $external: true,
	    $frame: true,
	    $frameElement: true,
	    $frames: true,
	    $innerHeight: true,
	    $innerWidth: true,
	    $onmozfullscreenchange: true,
	    $onmozfullscreenerror: true,
	    $outerHeight: true,
	    $outerWidth: true,
	    $pageXOffset: true,
	    $pageYOffset: true,
	    $parent: true,
	    $scrollLeft: true,
	    $scrollTop: true,
	    $scrollX: true,
	    $scrollY: true,
	    $self: true,
	    $webkitIndexedDB: true,
	    $webkitStorageInfo: true,
	    $window: true
	  };
	  var hasAutomationEqualityBug = function () {
	    /* global window */
	    if (typeof window === 'undefined') {
	      return false;
	    }
	    for (var k in window) {
	      try {
	        if (!excludedKeys['$' + k] && has$3.call(window, k) && window[k] !== null && typeof window[k] === 'object') {
	          try {
	            equalsConstructorPrototype(window[k]);
	          } catch (e) {
	            return true;
	          }
	        }
	      } catch (e) {
	        return true;
	      }
	    }
	    return false;
	  }();
	  var equalsConstructorPrototypeIfNotBuggy = function (o) {
	    /* global window */
	    if (typeof window === 'undefined' || !hasAutomationEqualityBug) {
	      return equalsConstructorPrototype(o);
	    }
	    try {
	      return equalsConstructorPrototype(o);
	    } catch (e) {
	      return false;
	    }
	  };
	  keysShim$1 = function keys(object) {
	    var isObject = object !== null && typeof object === 'object';
	    var isFunction = toStr$9.call(object) === '[object Function]';
	    var isArguments = isArgs$1(object);
	    var isString = isObject && toStr$9.call(object) === '[object String]';
	    var theKeys = [];
	    if (!isObject && !isFunction && !isArguments) {
	      throw new TypeError('Object.keys called on a non-object');
	    }
	    var skipProto = hasProtoEnumBug && isFunction;
	    if (isString && object.length > 0 && !has$3.call(object, 0)) {
	      for (var i = 0; i < object.length; ++i) {
	        theKeys.push(String(i));
	      }
	    }
	    if (isArguments && object.length > 0) {
	      for (var j = 0; j < object.length; ++j) {
	        theKeys.push(String(j));
	      }
	    } else {
	      for (var name in object) {
	        if (!(skipProto && name === 'prototype') && has$3.call(object, name)) {
	          theKeys.push(String(name));
	        }
	      }
	    }
	    if (hasDontEnumBug) {
	      var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);
	      for (var k = 0; k < dontEnums.length; ++k) {
	        if (!(skipConstructor && dontEnums[k] === 'constructor') && has$3.call(object, dontEnums[k])) {
	          theKeys.push(dontEnums[k]);
	        }
	      }
	    }
	    return theKeys;
	  };
	}
	var implementation$b = keysShim$1;

	var slice$1 = Array.prototype.slice;
	var isArgs = isArguments$3;
	var origKeys = Object.keys;
	var keysShim = origKeys ? function keys(o) {
	  return origKeys(o);
	} : implementation$b;
	var originalKeys = Object.keys;
	keysShim.shim = function shimObjectKeys() {
	  if (Object.keys) {
	    var keysWorksWithArguments = function () {
	      // Safari 5.0 bug
	      var args = Object.keys(arguments);
	      return args && args.length === arguments.length;
	    }(1, 2);
	    if (!keysWorksWithArguments) {
	      Object.keys = function keys(object) {
	        // eslint-disable-line func-name-matching
	        if (isArgs(object)) {
	          return originalKeys(slice$1.call(object));
	        }
	        return originalKeys(object);
	      };
	    }
	  } else {
	    Object.keys = keysShim;
	  }
	  return Object.keys || keysShim;
	};
	var objectKeys$2 = keysShim;

	/* eslint complexity: [2, 18], max-statements: [2, 33] */
	var shams$1 = function hasSymbols() {
	  if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') {
	    return false;
	  }
	  if (typeof Symbol.iterator === 'symbol') {
	    return true;
	  }
	  var obj = {};
	  var sym = Symbol('test');
	  var symObj = Object(sym);
	  if (typeof sym === 'string') {
	    return false;
	  }
	  if (Object.prototype.toString.call(sym) !== '[object Symbol]') {
	    return false;
	  }
	  if (Object.prototype.toString.call(symObj) !== '[object Symbol]') {
	    return false;
	  }

	  // temp disabled per https://github.com/ljharb/object.assign/issues/17
	  // if (sym instanceof Symbol) { return false; }
	  // temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4
	  // if (!(symObj instanceof Symbol)) { return false; }

	  // if (typeof Symbol.prototype.toString !== 'function') { return false; }
	  // if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }

	  var symVal = 42;
	  obj[sym] = symVal;
	  for (sym in obj) {
	    return false;
	  } // eslint-disable-line no-restricted-syntax, no-unreachable-loop
	  if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) {
	    return false;
	  }
	  if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) {
	    return false;
	  }
	  var syms = Object.getOwnPropertySymbols(obj);
	  if (syms.length !== 1 || syms[0] !== sym) {
	    return false;
	  }
	  if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) {
	    return false;
	  }
	  if (typeof Object.getOwnPropertyDescriptor === 'function') {
	    var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
	    if (descriptor.value !== symVal || descriptor.enumerable !== true) {
	      return false;
	    }
	  }
	  return true;
	};

	var origSymbol = typeof Symbol !== 'undefined' && Symbol;
	var hasSymbolSham = shams$1;
	var hasSymbols$5 = function hasNativeSymbols() {
	  if (typeof origSymbol !== 'function') {
	    return false;
	  }
	  if (typeof Symbol !== 'function') {
	    return false;
	  }
	  if (typeof origSymbol('foo') !== 'symbol') {
	    return false;
	  }
	  if (typeof Symbol('bar') !== 'symbol') {
	    return false;
	  }
	  return hasSymbolSham();
	};

	var test = {
	  foo: {}
	};
	var $Object = Object;
	var hasProto$1 = function hasProto() {
	  return {
	    __proto__: test
	  }.foo === test.foo && !({
	    __proto__: null
	  } instanceof $Object);
	};

	/* eslint no-invalid-this: 1 */

	var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
	var slice = Array.prototype.slice;
	var toStr$8 = Object.prototype.toString;
	var funcType = '[object Function]';
	var implementation$a = function bind(that) {
	  var target = this;
	  if (typeof target !== 'function' || toStr$8.call(target) !== funcType) {
	    throw new TypeError(ERROR_MESSAGE + target);
	  }
	  var args = slice.call(arguments, 1);
	  var bound;
	  var binder = function () {
	    if (this instanceof bound) {
	      var result = target.apply(this, args.concat(slice.call(arguments)));
	      if (Object(result) === result) {
	        return result;
	      }
	      return this;
	    } else {
	      return target.apply(that, args.concat(slice.call(arguments)));
	    }
	  };
	  var boundLength = Math.max(0, target.length - args.length);
	  var boundArgs = [];
	  for (var i = 0; i < boundLength; i++) {
	    boundArgs.push('$' + i);
	  }
	  bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);
	  if (target.prototype) {
	    var Empty = function Empty() {};
	    Empty.prototype = target.prototype;
	    bound.prototype = new Empty();
	    Empty.prototype = null;
	  }
	  return bound;
	};

	var implementation$9 = implementation$a;
	var functionBind = Function.prototype.bind || implementation$9;

	var bind$1 = functionBind;
	var src = bind$1.call(Function.call, Object.prototype.hasOwnProperty);

	var undefined$1;
	var $SyntaxError$1 = SyntaxError;
	var $Function = Function;
	var $TypeError$2 = TypeError;

	// eslint-disable-next-line consistent-return
	var getEvalledConstructor = function (expressionSyntax) {
	  try {
	    return $Function('"use strict"; return (' + expressionSyntax + ').constructor;')();
	  } catch (e) {}
	};
	var $gOPD$2 = Object.getOwnPropertyDescriptor;
	if ($gOPD$2) {
	  try {
	    $gOPD$2({}, '');
	  } catch (e) {
	    $gOPD$2 = null; // this is IE 8, which has a broken gOPD
	  }
	}

	var throwTypeError = function () {
	  throw new $TypeError$2();
	};
	var ThrowTypeError = $gOPD$2 ? function () {
	  try {
	    // eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties
	    arguments.callee; // IE 8 does not throw here
	    return throwTypeError;
	  } catch (calleeThrows) {
	    try {
	      // IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')
	      return $gOPD$2(arguments, 'callee').get;
	    } catch (gOPDthrows) {
	      return throwTypeError;
	    }
	  }
	}() : throwTypeError;
	var hasSymbols$4 = hasSymbols$5();
	var hasProto = hasProto$1();
	var getProto$1 = Object.getPrototypeOf || (hasProto ? function (x) {
	  return x.__proto__;
	} // eslint-disable-line no-proto
	: null);
	var needsEval = {};
	var TypedArray = typeof Uint8Array === 'undefined' || !getProto$1 ? undefined$1 : getProto$1(Uint8Array);
	var INTRINSICS = {
	  '%AggregateError%': typeof AggregateError === 'undefined' ? undefined$1 : AggregateError,
	  '%Array%': Array,
	  '%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined$1 : ArrayBuffer,
	  '%ArrayIteratorPrototype%': hasSymbols$4 && getProto$1 ? getProto$1([][Symbol.iterator]()) : undefined$1,
	  '%AsyncFromSyncIteratorPrototype%': undefined$1,
	  '%AsyncFunction%': needsEval,
	  '%AsyncGenerator%': needsEval,
	  '%AsyncGeneratorFunction%': needsEval,
	  '%AsyncIteratorPrototype%': needsEval,
	  '%Atomics%': typeof Atomics === 'undefined' ? undefined$1 : Atomics,
	  '%BigInt%': typeof BigInt === 'undefined' ? undefined$1 : BigInt,
	  '%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined$1 : BigInt64Array,
	  '%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined$1 : BigUint64Array,
	  '%Boolean%': Boolean,
	  '%DataView%': typeof DataView === 'undefined' ? undefined$1 : DataView,
	  '%Date%': Date,
	  '%decodeURI%': decodeURI,
	  '%decodeURIComponent%': decodeURIComponent,
	  '%encodeURI%': encodeURI,
	  '%encodeURIComponent%': encodeURIComponent,
	  '%Error%': Error,
	  '%eval%': eval,
	  // eslint-disable-line no-eval
	  '%EvalError%': EvalError,
	  '%Float32Array%': typeof Float32Array === 'undefined' ? undefined$1 : Float32Array,
	  '%Float64Array%': typeof Float64Array === 'undefined' ? undefined$1 : Float64Array,
	  '%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined$1 : FinalizationRegistry,
	  '%Function%': $Function,
	  '%GeneratorFunction%': needsEval,
	  '%Int8Array%': typeof Int8Array === 'undefined' ? undefined$1 : Int8Array,
	  '%Int16Array%': typeof Int16Array === 'undefined' ? undefined$1 : Int16Array,
	  '%Int32Array%': typeof Int32Array === 'undefined' ? undefined$1 : Int32Array,
	  '%isFinite%': isFinite,
	  '%isNaN%': isNaN,
	  '%IteratorPrototype%': hasSymbols$4 && getProto$1 ? getProto$1(getProto$1([][Symbol.iterator]())) : undefined$1,
	  '%JSON%': typeof JSON === 'object' ? JSON : undefined$1,
	  '%Map%': typeof Map === 'undefined' ? undefined$1 : Map,
	  '%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols$4 || !getProto$1 ? undefined$1 : getProto$1(new Map()[Symbol.iterator]()),
	  '%Math%': Math,
	  '%Number%': Number,
	  '%Object%': Object,
	  '%parseFloat%': parseFloat,
	  '%parseInt%': parseInt,
	  '%Promise%': typeof Promise === 'undefined' ? undefined$1 : Promise,
	  '%Proxy%': typeof Proxy === 'undefined' ? undefined$1 : Proxy,
	  '%RangeError%': RangeError,
	  '%ReferenceError%': ReferenceError,
	  '%Reflect%': typeof Reflect === 'undefined' ? undefined$1 : Reflect,
	  '%RegExp%': RegExp,
	  '%Set%': typeof Set === 'undefined' ? undefined$1 : Set,
	  '%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols$4 || !getProto$1 ? undefined$1 : getProto$1(new Set()[Symbol.iterator]()),
	  '%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined$1 : SharedArrayBuffer,
	  '%String%': String,
	  '%StringIteratorPrototype%': hasSymbols$4 && getProto$1 ? getProto$1(''[Symbol.iterator]()) : undefined$1,
	  '%Symbol%': hasSymbols$4 ? Symbol : undefined$1,
	  '%SyntaxError%': $SyntaxError$1,
	  '%ThrowTypeError%': ThrowTypeError,
	  '%TypedArray%': TypedArray,
	  '%TypeError%': $TypeError$2,
	  '%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined$1 : Uint8Array,
	  '%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined$1 : Uint8ClampedArray,
	  '%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined$1 : Uint16Array,
	  '%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined$1 : Uint32Array,
	  '%URIError%': URIError,
	  '%WeakMap%': typeof WeakMap === 'undefined' ? undefined$1 : WeakMap,
	  '%WeakRef%': typeof WeakRef === 'undefined' ? undefined$1 : WeakRef,
	  '%WeakSet%': typeof WeakSet === 'undefined' ? undefined$1 : WeakSet
	};
	if (getProto$1) {
	  try {
	    null.error; // eslint-disable-line no-unused-expressions
	  } catch (e) {
	    // https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229
	    var errorProto = getProto$1(getProto$1(e));
	    INTRINSICS['%Error.prototype%'] = errorProto;
	  }
	}
	var doEval = function doEval(name) {
	  var value;
	  if (name === '%AsyncFunction%') {
	    value = getEvalledConstructor('async function () {}');
	  } else if (name === '%GeneratorFunction%') {
	    value = getEvalledConstructor('function* () {}');
	  } else if (name === '%AsyncGeneratorFunction%') {
	    value = getEvalledConstructor('async function* () {}');
	  } else if (name === '%AsyncGenerator%') {
	    var fn = doEval('%AsyncGeneratorFunction%');
	    if (fn) {
	      value = fn.prototype;
	    }
	  } else if (name === '%AsyncIteratorPrototype%') {
	    var gen = doEval('%AsyncGenerator%');
	    if (gen && getProto$1) {
	      value = getProto$1(gen.prototype);
	    }
	  }
	  INTRINSICS[name] = value;
	  return value;
	};
	var LEGACY_ALIASES = {
	  '%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],
	  '%ArrayPrototype%': ['Array', 'prototype'],
	  '%ArrayProto_entries%': ['Array', 'prototype', 'entries'],
	  '%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],
	  '%ArrayProto_keys%': ['Array', 'prototype', 'keys'],
	  '%ArrayProto_values%': ['Array', 'prototype', 'values'],
	  '%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],
	  '%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],
	  '%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],
	  '%BooleanPrototype%': ['Boolean', 'prototype'],
	  '%DataViewPrototype%': ['DataView', 'prototype'],
	  '%DatePrototype%': ['Date', 'prototype'],
	  '%ErrorPrototype%': ['Error', 'prototype'],
	  '%EvalErrorPrototype%': ['EvalError', 'prototype'],
	  '%Float32ArrayPrototype%': ['Float32Array', 'prototype'],
	  '%Float64ArrayPrototype%': ['Float64Array', 'prototype'],
	  '%FunctionPrototype%': ['Function', 'prototype'],
	  '%Generator%': ['GeneratorFunction', 'prototype'],
	  '%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],
	  '%Int8ArrayPrototype%': ['Int8Array', 'prototype'],
	  '%Int16ArrayPrototype%': ['Int16Array', 'prototype'],
	  '%Int32ArrayPrototype%': ['Int32Array', 'prototype'],
	  '%JSONParse%': ['JSON', 'parse'],
	  '%JSONStringify%': ['JSON', 'stringify'],
	  '%MapPrototype%': ['Map', 'prototype'],
	  '%NumberPrototype%': ['Number', 'prototype'],
	  '%ObjectPrototype%': ['Object', 'prototype'],
	  '%ObjProto_toString%': ['Object', 'prototype', 'toString'],
	  '%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],
	  '%PromisePrototype%': ['Promise', 'prototype'],
	  '%PromiseProto_then%': ['Promise', 'prototype', 'then'],
	  '%Promise_all%': ['Promise', 'all'],
	  '%Promise_reject%': ['Promise', 'reject'],
	  '%Promise_resolve%': ['Promise', 'resolve'],
	  '%RangeErrorPrototype%': ['RangeError', 'prototype'],
	  '%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],
	  '%RegExpPrototype%': ['RegExp', 'prototype'],
	  '%SetPrototype%': ['Set', 'prototype'],
	  '%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],
	  '%StringPrototype%': ['String', 'prototype'],
	  '%SymbolPrototype%': ['Symbol', 'prototype'],
	  '%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],
	  '%TypedArrayPrototype%': ['TypedArray', 'prototype'],
	  '%TypeErrorPrototype%': ['TypeError', 'prototype'],
	  '%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],
	  '%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],
	  '%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],
	  '%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],
	  '%URIErrorPrototype%': ['URIError', 'prototype'],
	  '%WeakMapPrototype%': ['WeakMap', 'prototype'],
	  '%WeakSetPrototype%': ['WeakSet', 'prototype']
	};
	var bind = functionBind;
	var hasOwn$1 = src;
	var $concat$1 = bind.call(Function.call, Array.prototype.concat);
	var $spliceApply = bind.call(Function.apply, Array.prototype.splice);
	var $replace$1 = bind.call(Function.call, String.prototype.replace);
	var $strSlice = bind.call(Function.call, String.prototype.slice);
	var $exec$1 = bind.call(Function.call, RegExp.prototype.exec);

	/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */
	var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
	var reEscapeChar = /\\(\\)?/g; /** Used to match backslashes in property paths. */
	var stringToPath = function stringToPath(string) {
	  var first = $strSlice(string, 0, 1);
	  var last = $strSlice(string, -1);
	  if (first === '%' && last !== '%') {
	    throw new $SyntaxError$1('invalid intrinsic syntax, expected closing `%`');
	  } else if (last === '%' && first !== '%') {
	    throw new $SyntaxError$1('invalid intrinsic syntax, expected opening `%`');
	  }
	  var result = [];
	  $replace$1(string, rePropName, function (match, number, quote, subString) {
	    result[result.length] = quote ? $replace$1(subString, reEscapeChar, '$1') : number || match;
	  });
	  return result;
	};
	/* end adaptation */

	var getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {
	  var intrinsicName = name;
	  var alias;
	  if (hasOwn$1(LEGACY_ALIASES, intrinsicName)) {
	    alias = LEGACY_ALIASES[intrinsicName];
	    intrinsicName = '%' + alias[0] + '%';
	  }
	  if (hasOwn$1(INTRINSICS, intrinsicName)) {
	    var value = INTRINSICS[intrinsicName];
	    if (value === needsEval) {
	      value = doEval(intrinsicName);
	    }
	    if (typeof value === 'undefined' && !allowMissing) {
	      throw new $TypeError$2('intrinsic ' + name + ' exists, but is not available. Please file an issue!');
	    }
	    return {
	      alias: alias,
	      name: intrinsicName,
	      value: value
	    };
	  }
	  throw new $SyntaxError$1('intrinsic ' + name + ' does not exist!');
	};
	var getIntrinsic = function GetIntrinsic(name, allowMissing) {
	  if (typeof name !== 'string' || name.length === 0) {
	    throw new $TypeError$2('intrinsic name must be a non-empty string');
	  }
	  if (arguments.length > 1 && typeof allowMissing !== 'boolean') {
	    throw new $TypeError$2('"allowMissing" argument must be a boolean');
	  }
	  if ($exec$1(/^%?[^%]*%?$/, name) === null) {
	    throw new $SyntaxError$1('`%` may not be present anywhere but at the beginning and end of the intrinsic name');
	  }
	  var parts = stringToPath(name);
	  var intrinsicBaseName = parts.length > 0 ? parts[0] : '';
	  var intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);
	  var intrinsicRealName = intrinsic.name;
	  var value = intrinsic.value;
	  var skipFurtherCaching = false;
	  var alias = intrinsic.alias;
	  if (alias) {
	    intrinsicBaseName = alias[0];
	    $spliceApply(parts, $concat$1([0, 1], alias));
	  }
	  for (var i = 1, isOwn = true; i < parts.length; i += 1) {
	    var part = parts[i];
	    var first = $strSlice(part, 0, 1);
	    var last = $strSlice(part, -1);
	    if ((first === '"' || first === "'" || first === '`' || last === '"' || last === "'" || last === '`') && first !== last) {
	      throw new $SyntaxError$1('property names with quotes must have matching quotes');
	    }
	    if (part === 'constructor' || !isOwn) {
	      skipFurtherCaching = true;
	    }
	    intrinsicBaseName += '.' + part;
	    intrinsicRealName = '%' + intrinsicBaseName + '%';
	    if (hasOwn$1(INTRINSICS, intrinsicRealName)) {
	      value = INTRINSICS[intrinsicRea