0,n.validateType)("FlowType")}});s("QualifiedTypeIdentifier",{visitor:["id","qualification"],fields:{id:(0,n.validateType)("Identifier"),qualification:(0,n.validateType)(["Identifier","QualifiedTypeIdentifier"])}});s("StringLiteralTypeAnnotation",{builder:["value"],aliases:["FlowType"],fields:{value:(0,n.validate)((0,n.assertValueType)("string"))}});s("StringTypeAnnotation",{aliases:["FlowType","FlowBaseAnnotation"]});s("SymbolTypeAnnotation",{aliases:["FlowType","FlowBaseAnnotation"]});s("ThisTypeAnnotation",{aliases:["FlowType","FlowBaseAnnotation"]});s("TupleTypeAnnotation",{visitor:["types"],aliases:["FlowType"],fields:{types:(0,n.validate)((0,n.arrayOfType)("FlowType"))}});s("TypeofTypeAnnotation",{visitor:["argument"],aliases:["FlowType"],fields:{argument:(0,n.validateType)("FlowType")}});s("TypeAlias",{visitor:["id","typeParameters","right"],aliases:["FlowDeclaration","Statement","Declaration"],fields:{id:(0,n.validateType)("Identifier"),typeParameters:(0,n.validateOptionalType)("TypeParameterDeclaration"),right:(0,n.validateType)("FlowType")}});s("TypeAnnotation",{visitor:["typeAnnotation"],fields:{typeAnnotation:(0,n.validateType)("FlowType")}});s("TypeCastExpression",{visitor:["expression","typeAnnotation"],aliases:["ExpressionWrapper","Expression"],fields:{expression:(0,n.validateType)("Expression"),typeAnnotation:(0,n.validateType)("TypeAnnotation")}});s("TypeParameter",{visitor:["bound","default","variance"],fields:{name:(0,n.validate)((0,n.assertValueType)("string")),bound:(0,n.validateOptionalType)("TypeAnnotation"),default:(0,n.validateOptionalType)("FlowType"),variance:(0,n.validateOptionalType)("Variance")}});s("TypeParameterDeclaration",{visitor:["params"],fields:{params:(0,n.validate)((0,n.arrayOfType)("TypeParameter"))}});s("TypeParameterInstantiation",{visitor:["params"],fields:{params:(0,n.validate)((0,n.arrayOfType)("FlowType"))}});s("UnionTypeAnnotation",{visitor:["types"],aliases:["FlowType"],fields:{types:(0,n.validate)((0,n.arrayOfType)("FlowType"))}});s("Variance",{builder:["kind"],fields:{kind:(0,n.validate)((0,n.assertOneOf)("minus","plus"))}});s("VoidTypeAnnotation",{aliases:["FlowType","FlowBaseAnnotation"]});s("EnumDeclaration",{aliases:["Statement","Declaration"],visitor:["id","body"],fields:{id:(0,n.validateType)("Identifier"),body:(0,n.validateType)(["EnumBooleanBody","EnumNumberBody","EnumStringBody","EnumSymbolBody"])}});s("EnumBooleanBody",{aliases:["EnumBody"],visitor:["members"],fields:{explicitType:(0,n.validate)((0,n.assertValueType)("boolean")),members:(0,n.validateArrayOfType)("EnumBooleanMember"),hasUnknownMembers:(0,n.validate)((0,n.assertValueType)("boolean"))}});s("EnumNumberBody",{aliases:["EnumBody"],visitor:["members"],fields:{explicitType:(0,n.validate)((0,n.assertValueType)("boolean")),members:(0,n.validateArrayOfType)("EnumNumberMember"),hasUnknownMembers:(0,n.validate)((0,n.assertValueType)("boolean"))}});s("EnumStringBody",{aliases:["EnumBody"],visitor:["members"],fields:{explicitType:(0,n.validate)((0,n.assertValueType)("boolean")),members:(0,n.validateArrayOfType)(["EnumStringMember","EnumDefaultedMember"]),hasUnknownMembers:(0,n.validate)((0,n.assertValueType)("boolean"))}});s("EnumSymbolBody",{aliases:["EnumBody"],visitor:["members"],fields:{members:(0,n.validateArrayOfType)("EnumDefaultedMember"),hasUnknownMembers:(0,n.validate)((0,n.assertValueType)("boolean"))}});s("EnumBooleanMember",{aliases:["EnumMember"],visitor:["id"],fields:{id:(0,n.validateType)("Identifier"),init:(0,n.validateType)("BooleanLiteral")}});s("EnumNumberMember",{aliases:["EnumMember"],visitor:["id","init"],fields:{id:(0,n.validateType)("Identifier"),init:(0,n.validateType)("NumericLiteral")}});s("EnumStringMember",{aliases:["EnumMember"],visitor:["id","init"],fields:{id:(0,n.validateType)("Identifier"),init:(0,n.validateType)("StringLiteral")}});s("EnumDefaultedMember",{aliases:["EnumMember"],visitor:["id"],fields:{id:(0,n.validateType)("Identifier")}});s("IndexedAccessType",{visitor:["objectType","indexType"],aliases:["FlowType"],fields:{objectType:(0,n.validateType)("FlowType"),indexType:(0,n.validateType)("FlowType")}});s("OptionalIndexedAccessType",{visitor:["objectType","indexType"],aliases:["FlowType"],fields:{objectType:(0,n.validateType)("FlowType"),indexType:(0,n.validateType)("FlowType"),optional:(0,n.validate)((0,n.assertValueType)("boolean"))}})},7940:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});Object.defineProperty(t,"ALIAS_KEYS",{enumerable:true,get:function(){return s.ALIAS_KEYS}});Object.defineProperty(t,"BUILDER_KEYS",{enumerable:true,get:function(){return s.BUILDER_KEYS}});Object.defineProperty(t,"DEPRECATED_ALIASES",{enumerable:true,get:function(){return a.DEPRECATED_ALIASES}});Object.defineProperty(t,"DEPRECATED_KEYS",{enumerable:true,get:function(){return s.DEPRECATED_KEYS}});Object.defineProperty(t,"FLIPPED_ALIAS_KEYS",{enumerable:true,get:function(){return s.FLIPPED_ALIAS_KEYS}});Object.defineProperty(t,"NODE_FIELDS",{enumerable:true,get:function(){return s.NODE_FIELDS}});Object.defineProperty(t,"NODE_PARENT_VALIDATIONS",{enumerable:true,get:function(){return s.NODE_PARENT_VALIDATIONS}});Object.defineProperty(t,"PLACEHOLDERS",{enumerable:true,get:function(){return i.PLACEHOLDERS}});Object.defineProperty(t,"PLACEHOLDERS_ALIAS",{enumerable:true,get:function(){return i.PLACEHOLDERS_ALIAS}});Object.defineProperty(t,"PLACEHOLDERS_FLIPPED_ALIAS",{enumerable:true,get:function(){return i.PLACEHOLDERS_FLIPPED_ALIAS}});t.TYPES=void 0;Object.defineProperty(t,"VISITOR_KEYS",{enumerable:true,get:function(){return s.VISITOR_KEYS}});var n=r(3797);r(8013);r(9563);r(8899);r(8195);r(6851);r(3980);var s=r(3706);var i=r(7762);var a=r(4482);Object.keys(a.DEPRECATED_ALIASES).forEach((e=>{s.FLIPPED_ALIAS_KEYS[e]=s.FLIPPED_ALIAS_KEYS[a.DEPRECATED_ALIASES[e]]}));n(s.VISITOR_KEYS);n(s.ALIAS_KEYS);n(s.FLIPPED_ALIAS_KEYS);n(s.NODE_FIELDS);n(s.BUILDER_KEYS);n(s.DEPRECATED_KEYS);n(i.PLACEHOLDERS_ALIAS);n(i.PLACEHOLDERS_FLIPPED_ALIAS);const o=[].concat(Object.keys(s.VISITOR_KEYS),Object.keys(s.FLIPPED_ALIAS_KEYS),Object.keys(s.DEPRECATED_KEYS));t.TYPES=o},8899:(e,t,r)=>{"use strict";var n=r(3706);const s=(0,n.defineAliasedType)("JSX");s("JSXAttribute",{visitor:["name","value"],aliases:["Immutable"],fields:{name:{validate:(0,n.assertNodeType)("JSXIdentifier","JSXNamespacedName")},value:{optional:true,validate:(0,n.assertNodeType)("JSXElement","JSXFragment","StringLiteral","JSXExpressionContainer")}}});s("JSXClosingElement",{visitor:["name"],aliases:["Immutable"],fields:{name:{validate:(0,n.assertNodeType)("JSXIdentifier","JSXMemberExpression","JSXNamespacedName")}}});s("JSXElement",{builder:["openingElement","closingElement","children","selfClosing"],visitor:["openingElement","children","closingElement"],aliases:["Immutable","Expression"],fields:Object.assign({openingElement:{validate:(0,n.assertNodeType)("JSXOpeningElement")},closingElement:{optional:true,validate:(0,n.assertNodeType)("JSXClosingElement")},children:{validate:(0,n.chain)((0,n.assertValueType)("array"),(0,n.assertEach)((0,n.assertNodeType)("JSXText","JSXExpressionContainer","JSXSpreadChild","JSXElement","JSXFragment")))}},{selfClosing:{validate:(0,n.assertValueType)("boolean"),optional:true}})});s("JSXEmptyExpression",{});s("JSXExpressionContainer",{visitor:["expression"],aliases:["Immutable"],fields:{expression:{validate:(0,n.assertNodeType)("Expression","JSXEmptyExpression")}}});s("JSXSpreadChild",{visitor:["expression"],aliases:["Immutable"],fields:{expression:{validate:(0,n.assertNodeType)("Expression")}}});s("JSXIdentifier",{builder:["name"],fields:{name:{validate:(0,n.assertValueType)("string")}}});s("JSXMemberExpression",{visitor:["object","property"],fields:{object:{validate:(0,n.assertNodeType)("JSXMemberExpression","JSXIdentifier")},property:{validate:(0,n.assertNodeType)("JSXIdentifier")}}});s("JSXNamespacedName",{visitor:["namespace","name"],fields:{namespace:{validate:(0,n.assertNodeType)("JSXIdentifier")},name:{validate:(0,n.assertNodeType)("JSXIdentifier")}}});s("JSXOpeningElement",{builder:["name","attributes","selfClosing"],visitor:["name","attributes"],aliases:["Immutable"],fields:{name:{validate:(0,n.assertNodeType)("JSXIdentifier","JSXMemberExpression","JSXNamespacedName")},selfClosing:{default:false},attributes:{validate:(0,n.chain)((0,n.assertValueType)("array"),(0,n.assertEach)((0,n.assertNodeType)("JSXAttribute","JSXSpreadAttribute")))},typeParameters:{validate:(0,n.assertNodeType)("TypeParameterInstantiation","TSTypeParameterInstantiation"),optional:true}}});s("JSXSpreadAttribute",{visitor:["argument"],fields:{argument:{validate:(0,n.assertNodeType)("Expression")}}});s("JSXText",{aliases:["Immutable"],builder:["value"],fields:{value:{validate:(0,n.assertValueType)("string")}}});s("JSXFragment",{builder:["openingFragment","closingFragment","children"],visitor:["openingFragment","children","closingFragment"],aliases:["Immutable","Expression"],fields:{openingFragment:{validate:(0,n.assertNodeType)("JSXOpeningFragment")},closingFragment:{validate:(0,n.assertNodeType)("JSXClosingFragment")},children:{validate:(0,n.chain)((0,n.assertValueType)("array"),(0,n.assertEach)((0,n.assertNodeType)("JSXText","JSXExpressionContainer","JSXSpreadChild","JSXElement","JSXFragment")))}}});s("JSXOpeningFragment",{aliases:["Immutable"]});s("JSXClosingFragment",{aliases:["Immutable"]})},8195:(e,t,r)=>{"use strict";var n=r(3706);var s=r(7762);const i=(0,n.defineAliasedType)("Miscellaneous");{i("Noop",{visitor:[]})}i("Placeholder",{visitor:[],builder:["expectedNode","name"],fields:{name:{validate:(0,n.assertNodeType)("Identifier")},expectedNode:{validate:(0,n.assertOneOf)(...s.PLACEHOLDERS)}}});i("V8IntrinsicIdentifier",{builder:["name"],fields:{name:{validate:(0,n.assertValueType)("string")}}})},7762:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.PLACEHOLDERS_FLIPPED_ALIAS=t.PLACEHOLDERS_ALIAS=t.PLACEHOLDERS=void 0;var n=r(3706);const s=["Identifier","StringLiteral","Expression","Statement","Declaration","BlockStatement","ClassBody","Pattern"];t.PLACEHOLDERS=s;const i={Declaration:["Statement"],Pattern:["PatternLike","LVal"]};t.PLACEHOLDERS_ALIAS=i;for(const e of s){const t=n.ALIAS_KEYS[e];if(t!=null&&t.length)i[e]=t}const a={};t.PLACEHOLDERS_FLIPPED_ALIAS=a;Object.keys(i).forEach((e=>{i[e].forEach((t=>{if(!Object.hasOwnProperty.call(a,t)){a[t]=[]}a[t].push(e)}))}))},3980:(e,t,r)=>{"use strict";var n=r(3706);var s=r(8013);var i=r(9247);const a=(0,n.defineAliasedType)("TypeScript");const o=(0,n.assertValueType)("boolean");const tSFunctionTypeAnnotationCommon=()=>({returnType:{validate:(0,n.assertNodeType)("TSTypeAnnotation","Noop"),optional:true},typeParameters:{validate:(0,n.assertNodeType)("TSTypeParameterDeclaration","Noop"),optional:true}});a("TSParameterProperty",{aliases:["LVal"],visitor:["parameter"],fields:{accessibility:{validate:(0,n.assertOneOf)("public","private","protected"),optional:true},readonly:{validate:(0,n.assertValueType)("boolean"),optional:true},parameter:{validate:(0,n.assertNodeType)("Identifier","AssignmentPattern")},override:{validate:(0,n.assertValueType)("boolean"),optional:true},decorators:{validate:(0,n.chain)((0,n.assertValueType)("array"),(0,n.assertEach)((0,n.assertNodeType)("Decorator"))),optional:true}}});a("TSDeclareFunction",{aliases:["Statement","Declaration"],visitor:["id","typeParameters","params","returnType"],fields:Object.assign({},(0,s.functionDeclarationCommon)(),tSFunctionTypeAnnotationCommon())});a("TSDeclareMethod",{visitor:["decorators","key","typeParameters","params","returnType"],fields:Object.assign({},(0,s.classMethodOrDeclareMethodCommon)(),tSFunctionTypeAnnotationCommon())});a("TSQualifiedName",{aliases:["TSEntityName"],visitor:["left","right"],fields:{left:(0,n.validateType)("TSEntityName"),right:(0,n.validateType)("Identifier")}});const signatureDeclarationCommon=()=>({typeParameters:(0,n.validateOptionalType)("TSTypeParameterDeclaration"),["parameters"]:(0,n.validateArrayOfType)(["Identifier","RestElement"]),["typeAnnotation"]:(0,n.validateOptionalType)("TSTypeAnnotation")});const l={aliases:["TSTypeElement"],visitor:["typeParameters","parameters","typeAnnotation"],fields:signatureDeclarationCommon()};a("TSCallSignatureDeclaration",l);a("TSConstructSignatureDeclaration",l);const namedTypeElementCommon=()=>({key:(0,n.validateType)("Expression"),computed:{default:false},optional:(0,n.validateOptional)(o)});a("TSPropertySignature",{aliases:["TSTypeElement"],visitor:["key","typeAnnotation","initializer"],fields:Object.assign({},namedTypeElementCommon(),{readonly:(0,n.validateOptional)(o),typeAnnotation:(0,n.validateOptionalType)("TSTypeAnnotation"),initializer:(0,n.validateOptionalType)("Expression"),