import {
  convertToEnglish,
  convertToHindi,
  getKarmaName,
  getPadaName,
  getSetName,
  stringNumberHindi,
} from "@/utils/Function";
import Link from "next/link";
import { useEffect, useState } from "react";
import TitleCard from "@/components/card/TitleCard";
import LottieAnimation from "@/components/LottieAnimation";
import VerseListCard from "@/components/card/VerseListCard";
import { IoIosArrowForward } from "react-icons/io";

const Index = () => {
  const [sutraani, setSutraani] = useState([]);
  const [filterSutraani, setFilterSutraani] = useState([]);
  const [checked, setChecked] = useState(false);
  const [currentPage, setCurrentPage] = useState(1);
  const [isLoading, setIsLoading] = useState(false);

  const fetchData = async () => {
    try {
      setIsLoading(true);
      const res = await fetch(`/api/dhatu`);
      const data = await res.json();
      setSutraani(data.data);
      setIsLoading(false);
    } catch (error) {
      setIsLoading(false);
      console.error("Error fetching data:", error);
    }
  };

  useEffect(() => {
    let data;
    const _sutrani = sutraani;
    if (checked) {
      data = _sutrani
        .filter((f) => f?.skn !== "0")
        .sort((a, b) => a?.skn - b?.skn);
    } else {
      data = _sutrani.sort((a, b) => a?.i - b?.i);
    }
    const _chunk = data.slice(0, currentPage * 50);

    setFilterSutraani(_chunk);
  }, [currentPage, sutraani, checked]);

  const handleScroll = () => {
    const scrollY = window.scrollY;
    const windowHeight = window.innerHeight;
    const documentHeight = document.documentElement.scrollHeight;
    if (scrollY + windowHeight >= documentHeight - 100) {
      setCurrentPage(currentPage + 1);
    }
  };

  useEffect(() => {
    window.addEventListener("scroll", handleScroll);
    return () => {
      window.removeEventListener("scroll", handleScroll);
    };
  }, [currentPage]);

  useEffect(() => {
    fetchData();
  }, []);

  const handelSutraaniSearch = async (val) => {
    try {
      if (val.length > 0) {
        setIsLoading(true);
        const res = await fetch(
          "/api/sutraani?" +
            new URLSearchParams({
              search: val,
            })
        );
        const data = await res.json();
        if (data.success) {
          setSutraani(data.data);
          setFilterSutraani(data.data);
        }
        setIsLoading(false);
      } else {
        fetchData();
      }
    } catch (error) {
      setIsLoading(false);
      console.log("error in handelSutraaniSearch", error);
    }
  };

  return (
    <div className="flex flex-col items-center p-2 m-4">
      <div className="w-full md:w-[90%] xl:w-[80%]">
        <TitleCard mainTitle={"॥ धातुपाठः ॥"} />

        <div className="flex flex-col lg:flex-row items-center justify-center gap-4 mt-4">
          {/* <div className="text-subheading flex items-center select-none">
            <input
              id="checkbox_toggle"
              type="checkbox"
              className="check hidden"
              checked={checked}
              onChange={() => setChecked(!checked)}
            />
            <div
              className={`checkbox w-[300px] h-[50px] lg:h-[60px] rounded-full relative text-black overflow-hidden ${
                checked ? "bg-title-card text-white" : "bg-title-card"
              }`}
            >
              <label
                className="slide flex items-center justify-around w-[300px] h-[50px] lg:h-[60px] cursor-pointer"
                htmlFor="checkbox_toggle"
              >
                <span className="font-bold w-[150px] text-center text-lg cursor-pointer z-[1]">
                  अष्टाध्यायी क्रमः
                </span>
                <span className="font-bold w-[150px] text-center text-lg cursor-pointer z-[1]">
                  सिद्धान्तकौमुदी क्रमः
                </span>
                <label
                  className={`toggle ${
                    checked ? "w-[150px]" : "w-[140px]"
                  } h-[40px] lg:h-[50px] absolute rounded-full left-[5px] cursor-pointer transition-transform duration-400 bg-card ${
                    checked ? "transform translate-x-[140px]" : ""
                  }`}
                  htmlFor="checkbox_toggle"
                ></label>
              </label>
            </div>
          </div> */}

          <div className="w-full grow">
            <input
              type="search"
              onChange={(e) => handelSutraaniSearch(e.target.value.trim())}
              id="sutraani"
              className="bg-card p-1 md:p-2 px-4 text-xl rounded-lg focus:outline-none w-full h-14 border border-primary"
              placeholder="Search in Sutraani"
              autoComplete="off"
            />
          </div>
        </div>
        {isLoading ? (
          <LottieAnimation />
        ) : (
          <div className="flex flex-col gap-4 my-6">
            {filterSutraani &&
              filterSutraani?.map((item, index) => {
                return (
                  <Link
                    key={index}
                    href={`/dhatu/${item?.chapter}.${item?.dhatu}`}
                  >
                    <VerseListCard
                      className={
                        "flex items-center gap-2 relative group"
                      }
                    >
                      <div className="flex gap-2 items-center">
                        <div className="p-1 bg-title-card rounded">
                          {stringNumberHindi(
                            `${item?.chapter}.${item?.dhatu}`
                          )}
                        </div>
                        <div className="inline text-red">{item?.word}</div>
                        <div className="inline text-[#212529] break-words">
              <span className="inline-block break-words font-bold align-baseline text-[--red-color]">
                {item?.dhatu}
              </span>
              <span className="inline pl-3 ">{item?.aupadeshik}</span>
              <span className="inline pl-1 ">{item?.artha}</span>
              <span className="text-[#6c757d] inline pl-3 ">
                {item.baseindex?.split(".")[0] == "01"
                  ? "भ्वादिः"
                  : item.baseindex?.split(".")[0] == "02"
                  ? "अदादिः"
                  : item.baseindex?.split(".")[0] == "03"
                  ? "जुहोत्यादिः"
                  : item.baseindex?.split(".")[0] == "04"
                  ? "दिवादिः"
                  : item.baseindex?.split(".")[0] == "05"
                  ? "स्वादिः"
                  : item.baseindex?.split(".")[0] == "06"
                  ? "तुदादिः"
                  : item.baseindex?.split(".")[0] == "07"
                  ? "रुधादिः"
                  : item.baseindex?.split(".")[0] == "08"
                  ? "तनादिः"
                  : item.baseindex?.split(".")[0] == "09"
                  ? "क्र्यादिः"
                  : item.baseindex?.split(".")[0] == "10"
                  ? "चुरादिः"
                  : ""}
              </span>
              <span className="text-[#6c757d] inline pl-1 ">
                {getPadaName(item?.pada)}
              </span>
              <span className="text-[#6c757d] inline pl-1 ">
                {getKarmaName(item?.karma)}
              </span>
              <span className="text-[#6c757d] inline pl-1 ">
                {getSetName(item?.settva)}
              </span>
              {item?.artha_english && (
                <span className="inline pl-3 ">{`(${item?.artha_english})`}</span>
              )}
              {item?.artha_hindi && (
                <span className="inline pl-3 ">{`(${item?.artha_hindi})`}</span>
              )}
            </div>
                      </div>
                      <div
                        className={`font-normal text-subheading flex absolute bg-title-card px-2 items-center right-2 top-[30%] rounded opacity-0 transition-all ${
                          index === 0
                            ? "opacity-100"
                            : "group-hover:opacity-100"
                        }`}
                      >
                        व्याख्या: <IoIosArrowForward className="h-6 w-6" />
                      </div>
                    </VerseListCard>
                  </Link>
                );
              })}

            {!filterSutraani.length && <span>No Data Found</span>}
          </div>
        )}
      </div>
    </div>
  );
};

export default Index;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        